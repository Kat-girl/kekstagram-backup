// Получение случайного целого числа в заданном дтапазоне
const getRandomPositiveInteger = (a, b) => {
  const lower = Math.ceil(Math.min(Math.abs(a), Math.abs(b)));
  const upper = Math.floor(Math.max(Math.abs(a), Math.abs(b)));
  const result = Math.random() * (upper - lower + 1) + lower;
  return Math.floor(result);
};

// Проверка длины строки. Линтер подсказал, как упростить:)
function checkStringLength (string, maxLength) {
  return !(string.length > maxLength);
}

checkStringLength ('hey hey', 140);

const getRandomArrayElement = (elements) => elements[getRandomPositiveInteger(0, elements.length - 1)];

// пыталась написать 1 функцию для генерации массивов объектов, не могу довести ее до ума, чего-то не хватает
// function pushElementsToArray (array, length, elements) {
//   for (let i = 1; i <= length; i ++) {
//     array.push(elements);
//   }
//   return array;
// }

const DESCRIPTIONS = [
  'Закат над морем.',
  'Свобода и легкость.',
  'Природа во всей красе - яркие цветы, зеленые листья и голубое небо.',
  'Прекрасное место.',
  'Жизнь наполнена яркими красками.',
  'Красивая девушка, закат.',
  'Пейзаж',
  'Фотография передает ощущение таинственности и загадочности, словно кто-то или что-то скрывается за деревьями.',
  'Загадочный пейзаж.',
  'Наслаждаясь закатом.',
  'Уединение',
  'На берегу озера',
  'Фотография передает ощущение легкости и свободы, словно ты летишь над землей.',
  'На снимке изображен красивый закат над городом, который создает атмосферу романтики и мечтательности.',
  'На фото изображен прекрасный вид на город с высоты птичьего полета, который передает ощущение величия и красоты.',
  'Фотография передает настроение праздника и радости, словно это день рождения или другое торжество.',
  'На снимке можно увидеть красивый букет цветов, который символизирует красоту и нежность.',
  'На фото изображены два человека, стоящие рядом друг с другом, передающие чувство единства и поддержки.',
  'Фотография передает ощущение спокойствия и безмятежности, словно время остановилось и все вокруг замерло.',
  'На снимке изображены две собаки, которые играют вместе, передавая чувство радости и веселья.',
  'На фото передается атмосфера уюта и комфорта, словно ты сидишь в теплой комнате с близкими людьми.',
  'Фотография передает красоту и гармонию природы, словно она является источником вдохновения и силы.',
  'На снимке запечатлены два человека, которые сидят на берегу реки, наслаждаясь природой и друг другом.',
  'Фотография передает чувство умиротворения и спокойствия, словно время замедляется и ты можешь насладиться моментом.',
  'Праздник!'
];

const NAMES = [
  'Иван',
  'Хуан Себастьян',
  'Мария',
  'Кристоф',
  'Виктор',
  'Юлия',
  'Люпита',
  'Вашингтон'
];

// для получения 1 или 2 предложений в комментарии
function getCommentMessage() {
  const MESSAGES = [
    'Всё отлично!',
    'В целом всё неплохо. Но не всё.',
    'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
    'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
    'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
    'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!'
  ];
  let message = '';
  for (let i = 0; i <= getRandomPositiveInteger(0, 1); i ++) {
    message = message + getRandomArrayElement(MESSAGES);
  }
  return message;
}

// создаем объект для комментариев
const getCommentsDescription = (i) => ({
  id: i,
  avatar: `img/avatar-${  getRandomPositiveInteger(1, 6)  }.svg`,
  message: getCommentMessage(),
  name: getRandomArrayElement(NAMES)
});

// формируем массив объектов для комментариев (как того требует тз)
// вынесла let j за пределы функции, чтобы при каждой следующей генерации массива id не начинались с 1, а продолжались по порядку (но они продолжаются через 1, для этой задачи не критично, главное, что id не повторяются)
let j = 0;
function getComments() {
  const COMMENTS = [];
  for (j ++; j <= getRandomPositiveInteger(1, j+500); j ++) {
    COMMENTS.push(getCommentsDescription(j));
  }
  return COMMENTS;
}

// создаем объект для описания фотографий
const  getPhotosDescriptions = (i) => ({
  id: i,
  url: `photos/${  i  }.jpg`,
  description: getRandomArrayElement(DESCRIPTIONS),
  likes: getRandomPositiveInteger(15, 200),
  commemts: getComments()
});


// генерируем массив из 25 объектов - описаний фотографий
function getSimilarPhotoDescriptions () {
  const similarPhotoDescriptions = [];
  for (let i = 1; i <= 25; i++) {
    similarPhotoDescriptions.push(getPhotosDescriptions(i));
  }
  return similarPhotoDescriptions;
}


// console.log(getSimilarPhotoDescriptions ());
getSimilarPhotoDescriptions ();
